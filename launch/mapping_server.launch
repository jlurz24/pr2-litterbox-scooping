<!-- 
Copied from pr2_3dnav to resolve incorrect point cloud source.
Launch octomap_server for mapping: Listens to incoming PointCloud data
and incrementally builds an octomap. The data is sent out in different representations. -->
<launch>
        <node pkg="litterbox" type="octomap_server" name="octomap_server">
                <param name="resolution" value="0.025" />

                <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
                <param name="frame_id" type="string" value="odom_combined" />

                <!-- maximum range to integrate (speedup!) -->
                <param name="max_sensor_range" value="3" />
                
                <!-- TODO: Implement -->
                <param name="filter_speckles" value="true" />
                <!-- Planning node will ignore objects below 8 centimeters -->
                <param name="filter_ground" value="false" />

                <!-- data source to integrate (PointCloud2) -->
                <remap from="laser_cloud_in" to="base_scan_marking" />
                <remap from="point_cloud_out" to="octomap_point_cloud_centers" />
        </node>
</launch>

