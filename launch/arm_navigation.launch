<launch>
  <!-- machine tags for sim, be sure to set environment variable ROBOT to sim. Only needed for simulation -->
  <include file="$(find pr2_machine)/sim.machine" />
  
  <!-- Navigation stack -->
  <include file="$(find pr2_navigation_global)/amcl_node.xml" />
  <include file="$(find pr2_navigation_teleop)/teleop.xml" />
  <include file="$(find pr2_navigation_perception)/lasers_and_filters.xml" />
  <include file="$(find pr2_navigation_perception)/ground_plane.xml" />
  <include file="$(find pr2_navigation_global)/move_base.xml" />
  <node name="map_server" pkg="map_server" type="map_server" args="$(find gazebo_worlds)/Media/materials/textures/map_blank.png 0.1" respawn="true" />

  <!-- Arm navigation -->
  <include file="$(find pr2_3dnav)/right_arm_navigation.launch" />
  
  <!-- tuckarm action -->
  <!-- For robot when not running nav stack -->
  <!--  <node pkg="pr2_tuck_arms_action" type="tuck_arms.py" name="tuck_arms_action" output="screen">
    <param name="r_joint_trajectory_action" value="r_arm_controller/joint_trajectory_generator" />
    <param name="l_joint_trajectory_action" value="l_arm_controller/joint_trajectory_generator" />
    <param name="move_duration" value="0.0" />
  </node>
  -->

  <!-- For object detection -->
  <node pkg="point_cloud_converter" name="point_cloud_converter2" type="point_cloud_converter">
    <remap from="/points_in" to="/wide_stereo/points" />
    <remap from="/points2_out" to="/wide_stereo/points2" />
  </node>
  
  <!-- Robot location -->
  <!--<param name="cmvision/color_file" type="string" value="/home/student/jlurz/ros_workspace/colors.txt"/> -->
    
  <!-- Simulation -->
  <param name="cmvision/color_file" type="string" value="/home/jlurz/ros_workspace/litterbox/colors.txt"/>

  <include file="../cmvision/cmvision.launch"/>

</launch>
